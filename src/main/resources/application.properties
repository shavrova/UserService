server.port=5555
  #${PORT:0}
spring.application.name=users-ws
spring.devtools.restart.enabled=true

#
# JPA
#
spring.datasource.url=jdbc:mysql://${RDS_HOSTNAME:localhost}:${RDS_PORT:3306}/${RDS_DB_NAME:users_db}
spring.datasource.username=${RDS_USERNAME:users_db-user}
spring.datasource.password=${RDS_PASSWORD:test}

spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
spring.jpa.show-sql=true

#
# Eureka
#
eureka.client.serviceUrl.defaultZone=http://localhost:8555/eureka/
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#
# Security
#
gateway.ip=192.168.1.50
jwt.expiration-time=1728000000
jwt.secret=5eVVJLjLDzGxqospiQpxDvSvDe4pM567L
login.path = /login
oauth2.authorizedRedirectUri=http://localhost:8333/users-ws/oauth2/redirect


#app.auth.tokenSecret=926D96C90030DD58429D2751AC1BDBBC
#app.auth.tokenExpirationMsec=864000000
#app.

#
# Actuator
#
management.endpoints.web.exposure.include=mappings


#
# RabbitMQ
#
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=tms-user
spring.rabbitmq.password=test

#
# Feign
#
feign.hystrix.enabled=true

#
# Zipkin
#
spring.zipkin.base-url=http://localhost:9411
spring.zipkin.sender.type=web
spring.sleuth.sampler.probability=1

#
# Logging
#
logging.level.com.tms.api.users.service.test.TestServiceClient=DEBUG
logging.file=users-ws.log

logging.level.root=info
logging.level.org.springframework.web=debug
logging.level.org.hibernate=info


#
# Google oauth
#
spring.security.oauth2.client.registration.google.client-id=379702914502-4h83l09gh3hvringe9v86o2phtaue32g.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=2kOIjnNrLLEe6sk1ogOe4ki7
spring.security.oauth2.client.registration.google.redirectUri=http://localhost:8333/users-ws/oauth2/callback/google
spring.security.oauth2.client.registration.google.scope=profile,email
#spring.security.oauth2.client.registration.provider.google.authorizationUri=https://accounts.google.com/o/oauth2/v2/auth?access_type=offline

